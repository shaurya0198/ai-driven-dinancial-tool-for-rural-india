// Global variables
let currentLanguage = 'hi'; // Default language is Hindi
let isDarkMode = false;
let isNotificationPanelOpen = false;

// DOM ready function
document.addEventListener('DOMContentLoaded', function() {
    // Initialize elements
    setupLanguageToggle();
    setupTheme();
    
    // Setup keyboard event for input
    document.getElementById('userInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendUserInput();
        }
    });
});

// Language toggle functionality
function setupLanguageToggle() {
    const langButtons = document.querySelectorAll('.lang-btn');
    
    langButtons.forEach(button => {
        button.addEventListener('click', function() {
            const lang = this.getAttribute('data-lang');
            
            // Skip if already selected
            if (lang === currentLanguage) return;
            
            // Update active button
            langButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            
            // Update language
            currentLanguage = lang;
            
            // Update UI text based on language
            updateUILanguage();
        });
    });
}

// Update UI text based on selected language
function updateUILanguage() {
    const elements = {
        title: { hi: 'AI ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï', en: 'AI Financial Assistant' },
        subtitle: { hi: '‡§Ö‡§™‡§®‡•á ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡•á ‡§â‡§§‡•ç‡§§‡§∞ ‡§™‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™ ‡§ö‡•Å‡§®‡•á‡§Ç', en: 'Choose an option to get answers to your financial questions' },
        micText: { hi: '‡§¨‡•ã‡§≤‡•á‡§Ç / Speak', en: 'Speak' },
        inputPlaceholder: { hi: '‡§Ö‡§™‡§®‡§æ ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§Ø‡§π‡§æ‡§Ç ‡§ü‡§æ‡§á‡§™ ‡§ï‡§∞‡•á‡§Ç / Type your question here...', en: 'Type your question here...' },
        chatTitle: { hi: '‡§ö‡•à‡§ü / Chat', en: 'Chat' },
        chatStatus: { hi: '‡§ë‡§®‡§≤‡§æ‡§á‡§® / Online', en: 'Online' },
        updatesBtnText: { hi: '‡§Ö‡§™‡§°‡•á‡§ü / Updates', en: 'Updates' },
        helpBtnText: { hi: '‡§∏‡§π‡§æ‡§Ø‡§§‡§æ / Help', en: 'Help' },
        themeBtnText: { hi: '‡§•‡•Ä‡§Æ / Theme', en: 'Theme' },
        clearChat: { hi: '‡§∏‡§æ‡§´‡§º ‡§ï‡§∞‡•á‡§Ç', en: 'Clear' },
        notificationTitle: { hi: '‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü / Latest Updates', en: 'Latest Updates' }
    };

    // Button texts
    const buttonTexts = {
        bank: { title: { hi: '‡§¨‡•à‡§Ç‡§ï ‡§¨‡•à‡§≤‡•á‡§Ç‡§∏', en: 'Bank Balance' }, subtitle: { hi: 'Bank Balance', en: '' } },
        loan: { title: { hi: '‡§ã‡§£ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ', en: 'Loan Help' }, subtitle: { hi: 'Loan Help', en: '' } },
        govt: { title: { hi: '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Å', en: 'Govt Schemes' }, subtitle: { hi: 'Govt Schemes', en: '' } },
        scam: { title: { hi: '‡§ß‡•ã‡§ñ‡§æ‡§ß‡§°‡§º‡•Ä ‡§Ö‡§≤‡§∞‡•ç‡§ü', en: 'Scam Alert' }, subtitle: { hi: 'Scam Alert', en: '' } },
        invest: { title: { hi: '‡§®‡§ø‡§µ‡•á‡§∂ ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™', en: 'Investment Options' }, subtitle: { hi: 'Investment Options', en: '' } },
        insurance: { title: { hi: '‡§¨‡•Ä‡§Æ‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Å', en: 'Insurance Plans' }, subtitle: { hi: 'Insurance Plans', en: '' } }
    };

    // Quick actions
    const qaTexts = {
        upi: { hi: 'UPI Transfer', en: 'UPI Transfer' },
        bill: { hi: 'Bill Payment', en: 'Bill Payment' },
        mobile: { hi: 'Mobile Recharge', en: 'Mobile Recharge' },
        gold: { hi: 'Gold Rate', en: 'Gold Rate' }
    };

    // Update main UI elements
    document.querySelector('.title').textContent = elements.title[currentLanguage];
    document.querySelector('.subtitle').textContent = elements.subtitle[currentLanguage];
    document.querySelector('.mic-text').textContent = elements.micText[currentLanguage];
    document.getElementById('userInput').placeholder = elements.inputPlaceholder[currentLanguage];
    document.querySelector('.chat-title').textContent = elements.chatTitle[currentLanguage];
    document.querySelector('.chat-status').textContent = elements.chatStatus[currentLanguage];
    document.querySelector('.notification-title').textContent = elements.notificationTitle[currentLanguage];
    
    // Update footer buttons
    document.querySelectorAll('.footer-btn .footer-text')[0].textContent = elements.updatesBtnText[currentLanguage];
    document.querySelectorAll('.footer-btn .footer-text')[1].textContent = elements.helpBtnText[currentLanguage];
    document.querySelectorAll('.footer-btn .footer-text')[2].textContent = elements.themeBtnText[currentLanguage];
    
    // Update clear button
    document.querySelector('.clear-chat').textContent = elements.clearChat[currentLanguage];
    
    // Update button texts
    const buttonElements = document.querySelectorAll('.button-wrapper');
    buttonElements[0].querySelector('.button-title').textContent = buttonTexts.bank.title[currentLanguage];
    buttonElements[0].querySelector('.button-subtitle').textContent = buttonTexts.bank.subtitle[currentLanguage];
    buttonElements[1].querySelector('.button-title').textContent = buttonTexts.loan.title[currentLanguage];
    buttonElements[1].querySelector('.button-subtitle').textContent = buttonTexts.loan.subtitle[currentLanguage];
    buttonElements[2].querySelector('.button-title').textContent = buttonTexts.govt.title[currentLanguage];
    buttonElements[2].querySelector('.button-subtitle').textContent = buttonTexts.govt.subtitle[currentLanguage];
    buttonElements[3].querySelector('.button-title').textContent = buttonTexts.scam.title[currentLanguage];
    buttonElements[3].querySelector('.button-subtitle').textContent = buttonTexts.scam.subtitle[currentLanguage];
    buttonElements[4].querySelector('.button-title').textContent = buttonTexts.invest.title[currentLanguage];
    buttonElements[4].querySelector('.button-subtitle').textContent = buttonTexts.invest.subtitle[currentLanguage];
    buttonElements[5].querySelector('.button-title').textContent = buttonTexts.insurance.title[currentLanguage];
    buttonElements[5].querySelector('.button-subtitle').textContent = buttonTexts.insurance.subtitle[currentLanguage];
    
    // Update quick action texts
    const qaElements = document.querySelectorAll('.quick-action .qa-text');
    qaElements[0].textContent = qaTexts.upi[currentLanguage];
    qaElements[1].textContent = qaTexts.bill[currentLanguage];
    qaElements[2].textContent = qaTexts.mobile[currentLanguage];
    qaElements[3].textContent = qaTexts.gold[currentLanguage];
    
    // Update initial bot message if it exists
    const welcomeMessage = document.querySelector('.welcome-message .message-content');
    if (welcomeMessage) {
        if (currentLanguage === 'hi') {
            welcomeMessage.innerHTML = `<p>‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Ü‡§™‡§ï‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡•à‡§Ç ‡§Ø‡§π‡§æ‡§Ç ‡§π‡•Ç‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ä‡§™‡§∞ ‡§¶‡§ø‡§è ‡§ó‡§è ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§è‡§ï ‡§ö‡•Å‡§®‡•á‡§Ç‡•§</p>
                                       <p>Hello! I'm here to help you. Please select one of the options above.</p>`;
        } else {
            welcomeMessage.innerHTML = <p>Hello! I'm here to help you. Please select one of the options above.</p>;
        }
    }
}

// Toggle dark mode
function toggleDarkMode() {
    isDarkMode = !isDarkMode;
    document.body.classList.toggle('dark-mode', isDarkMode);
    
    // Update theme icon
    const themeIcon = document.getElementById('themeIcon');
    themeIcon.textContent = isDarkMode ? '‚òÄ' : 'üåô';
    
    // Save preference
    localStorage.setItem('darkMode', isDarkMode);
}

// Setup theme based on saved preference
function setupTheme() {
    const savedTheme = localStorage.getItem('darkMode');
    if (savedTheme !== null) {
        isDarkMode = savedTheme === 'true';
        document.body.classList.toggle('dark-mode', isDarkMode);
        document.getElementById('themeIcon').textContent = isDarkMode ? '‚òÄ' : 'üåô';
    }
}

// Toggle notification panel
function toggleNotificationPanel() {
    isNotificationPanelOpen = !isNotificationPanelOpen;
    const panel = document.getElementById('notificationPanel');
    panel.style.transform = isNotificationPanelOpen ? 'translateY(0)' : 'translateY(100%)';
}

// Show FAQ modal
function showFAQ() {
    document.getElementById('faqModal').style.display = 'flex';
}

// Close any modal
function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

// Send message to chat from buttons
function sendMessage(message) {
    addUserMessage(message);
    
    // Simulate bot thinking
    showTypingIndicator();
    
    // Generate response based on message type
    setTimeout(() => {
        removeTypingIndicator();
        
        let botResponse;
        switch(message) {
            case 'Check Bank Balance':
                botResponse = currentLanguage === 'hi' 
                    ? '‡§Ö‡§™‡§®‡§æ ‡§¨‡•à‡§Ç‡§ï ‡§¨‡•à‡§≤‡•á‡§Ç‡§∏ ‡§ú‡§æ‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§ñ‡§æ‡§§‡§æ ‡§®‡§Ç‡§¨‡§∞ ‡§Ø‡§æ ‡§Ø‡•Ç‡§ú‡§∞‡§®‡•á‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§'
                    : 'To check your bank balance, please enter your account number or username.';
                break;
            case 'Loan Help':
                botResponse = currentLanguage === 'hi'
                    ? '‡§π‡§Æ ‡§Ü‡§™‡§ï‡•ã ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§≤‡•ã‡§® ‡§ë‡§´‡§º‡§∞ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡§æ ‡§≤‡•ã‡§® ‡§ö‡§æ‡§π‡§ø‡§è? (‡§π‡•ã‡§Æ ‡§≤‡•ã‡§®, ‡§ï‡§æ‡§∞ ‡§≤‡•ã‡§®, ‡§è‡§ú‡•Å‡§ï‡•á‡§∂‡§® ‡§≤‡•ã‡§®, ‡§™‡§∞‡•ç‡§∏‡§®‡§≤ ‡§≤‡•ã‡§®)'
                    : 'We can offer you various types of loans. Please specify what type of loan you need? (Home Loan, Car Loan, Education Loan, Personal Loan)';
                break;
            case 'Govt Schemes':
                botResponse = currentLanguage === 'hi'
                    ? '‡§≠‡§æ‡§∞‡§§ ‡§∏‡§∞‡§ï‡§æ‡§∞ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§ï‡§à ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Å ‡§ö‡§≤‡§æ‡§à ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç? (‡§™‡•á‡§Ç‡§∂‡§®, ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ, ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø, ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ)'
                    : 'There are many schemes being run by the Government of India. What type of scheme are you interested in? (Pension, Education, Health, Financial Assistance)';
                break;
            case 'Scam Alert':
                botResponse = currentLanguage === 'hi'
                    ? '‡§∏‡§æ‡§µ‡§ß‡§æ‡§® ‡§∞‡§π‡•á‡§Ç! ‡§π‡§æ‡§≤ ‡§π‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡§à ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§ß‡•ã‡§ñ‡§æ‡§ß‡§°‡§º‡•Ä ‡§ï‡•á ‡§Æ‡§æ‡§Æ‡§≤‡•á ‡§∏‡§æ‡§Æ‡§®‡•á ‡§Ü‡§è ‡§π‡•à‡§Ç‡•§ ‡§ï‡§≠‡•Ä ‡§≠‡•Ä ‡§Ö‡§™‡§®‡§æ OTP, ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§Ø‡§æ ‡§™‡§ø‡§® ‡§ï‡§ø‡§∏‡•Ä ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§æ‡§ù‡§æ ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§'
                    : 'Stay alert! There have been many cases of financial fraud recently. Never share your OTP, password, or PIN with anyone.';
                break;
            case 'Investment Options':
                botResponse = currentLanguage === 'hi'
                    ? '‡§Ü‡§™ ‡§ï‡§à ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§®‡§ø‡§µ‡•á‡§∂ ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ö‡•Å‡§® ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç: ‡§´‡§ø‡§ï‡•ç‡§∏‡•ç‡§° ‡§°‡§ø‡§™‡•â‡§ú‡§ø‡§ü, ‡§Æ‡•ç‡§Ø‡•Ç‡§ö‡•Å‡§Ö‡§≤ ‡§´‡§Ç‡§°, ‡§∏‡•ç‡§ü‡•â‡§ï ‡§Æ‡§æ‡§∞‡•ç‡§ï‡•á‡§ü, ‡§ó‡•ã‡§≤‡•ç‡§°, ‡§Ø‡§æ ‡§∞‡§ø‡§Ø‡§≤ ‡§è‡§∏‡•ç‡§ü‡•á‡§ü‡•§ ‡§Ü‡§™ ‡§ï‡§ø‡§∏‡§Æ‡•á‡§Ç ‡§®‡§ø‡§µ‡•á‡§∂ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?'
                    : 'You can choose from various investment options: Fixed Deposits, Mutual Funds, Stock Market, Gold, or Real Estate. Which one would you like to invest in?';
                break;
            case 'Insurance Plans':
                botResponse = currentLanguage === 'hi'
                    ? '‡§¨‡•Ä‡§Æ‡§æ ‡§Ü‡§™‡§ï‡•á ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø ‡§ï‡•ã ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§ ‡§π‡§Æ ‡§π‡•á‡§≤‡•ç‡§• ‡§á‡§Ç‡§∂‡•ç‡§Ø‡•ã‡§∞‡•á‡§Ç‡§∏, ‡§≤‡§æ‡§á‡§´ ‡§á‡§Ç‡§∂‡•ç‡§Ø‡•ã‡§∞‡•á‡§Ç‡§∏, ‡§î‡§∞ ‡§Æ‡•ã‡§ü‡§∞ ‡§á‡§Ç‡§∂‡•ç‡§Ø‡•ã‡§∞‡•á‡§Ç‡§∏ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡§æ ‡§¨‡•Ä‡§Æ‡§æ ‡§≤‡•á‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?'
                    : 'Insurance is an important way to secure your future. We offer Health Insurance, Life Insurance, and Motor Insurance. What type of insurance would you like to get?';
                break;
            case 'UPI Transfer':
                botResponse = currentLanguage === 'hi'
                    ? 'UPI ‡§ü‡•ç‡§∞‡§æ‡§Ç‡§∏‡§´‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ UPI ‡§Ü‡§à‡§°‡•Ä ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§'
                    : 'For UPI transfer, please enter the recipient\'s UPI ID.';
                break;
            case 'Bill Payment':
                botResponse = currentLanguage === 'hi'
                    ? '‡§¨‡§ø‡§≤ ‡§≠‡•Å‡§ó‡§§‡§æ‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§¨‡§ø‡§≤ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ö‡•Å‡§®‡•á‡§Ç: ‡§¨‡§ø‡§ú‡§≤‡•Ä, ‡§™‡§æ‡§®‡•Ä, ‡§ó‡•à‡§∏, ‡§Ø‡§æ ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤‡•§'
                    : 'For bill payment, please select the bill type: Electricity, Water, Gas, or Mobile.';
                break;
            case 'Mobile Recharge':
                botResponse = currentLanguage === 'hi'
                    ? '‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§∞‡§ø‡§ö‡§æ‡§∞‡•ç‡§ú ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞ ‡§î‡§∞ ‡§ë‡§™‡§∞‡•á‡§ü‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§'
                    : 'For mobile recharge, please enter your mobile number and operator.';
                break;
            case 'Gold Rate':
                botResponse = currentLanguage === 'hi'
                    ? '‡§Ü‡§ú ‡§∏‡•ã‡§®‡•á ‡§ï‡§æ ‡§≠‡§æ‡§µ: 24 ‡§ï‡•à‡§∞‡•á‡§ü - ‚Çπ5,800/‡§ó‡•ç‡§∞‡§æ‡§Æ, 22 ‡§ï‡•à‡§∞‡•á‡§ü - ‚Çπ5,300/‡§ó‡•ç‡§∞‡§æ‡§Æ (‡§®‡•ã‡§ü: ‡§Ø‡•á ‡§¶‡§∞‡•á‡§Ç ‡§ï‡•á‡§µ‡§≤ ‡§â‡§¶‡§æ‡§π‡§∞‡§£ ‡§π‡•à‡§Ç)'
                    : 'Today\'s gold rate: 24 Carat - ‚Çπ5,800/gram, 22 Carat - ‚Çπ5,300/gram (Note: These rates are examples only)';
                break;
            default:
                botResponse = currentLanguage === 'hi'
                    ? '‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?'
                    : 'How can I help you?';
        }
        
        addBotMessage(botResponse);
    }, 1000);
}

// Send user input from text field
function sendUserInput() {
    const userInput = document.getElementById('userInput');
    const message = userInput.value.trim();
    
    if (message) {
        addUserMessage(message);
        userInput.value = '';
        
        // Simulate bot thinking
        showTypingIndicator();
        
        // Simple response based on keywords in user input
        setTimeout(() => {
            removeTypingIndicator();
            
            let botResponse;
            const lowerCaseMsg = message.toLowerCase();
            
            if (lowerCaseMsg.includes('hello') || lowerCaseMsg.includes('hi') || lowerCaseMsg.includes('‡§®‡§Æ‡§∏‡•ç‡§§‡•á')) {
                botResponse = currentLanguage === 'hi' 
                    ? '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?'
                    : 'Hello! How can I assist you today?';
            } else if (lowerCaseMsg.includes('balance') || lowerCaseMsg.includes('‡§¨‡•à‡§≤‡•á‡§Ç‡§∏')) {
                botResponse = currentLanguage === 'hi'
                    ? '‡§Ö‡§™‡§®‡§æ ‡§¨‡•à‡§Ç‡§ï ‡§¨‡•à‡§≤‡•á‡§Ç‡§∏ ‡§ú‡§æ‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§ñ‡§æ‡§§‡§æ ‡§®‡§Ç‡§¨‡§∞ ‡§Ø‡§æ ‡§Ø‡•Ç‡§ú‡§∞‡§®‡•á‡§Æ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç‡•§'
                    : 'To check your bank balance, please enter your account number or username.';
            } else if (lowerCaseMsg.includes('loan') || lowerCaseMsg.includes('‡§ã‡§£') || lowerCaseMsg.includes('‡§ï‡§∞‡•ç‡§ú')) {
                botResponse = currentLanguage === 'hi'
                    ? '‡§π‡§Æ ‡§Ü‡§™‡§ï‡•ã ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§≤‡•ã‡§® ‡§ë‡§´‡§º‡§∞ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡§æ ‡§≤‡•ã‡§® ‡§ö‡§æ‡§π‡§ø‡§è?'
                    : 'We can offer you various types of loans. Please specify what type of loan you need?';
            } else if (lowerCaseMsg.includes('invest') || lowerCaseMsg.includes('‡§®‡§ø‡§µ‡•á‡§∂')) {
                botResponse = currentLanguage === 'hi'
                    ? '‡§Ü‡§™ ‡§ï‡§à ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§®‡§ø‡§µ‡•á‡§∂ ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ö‡•Å‡§® ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™‡§ï‡§æ ‡§¨‡§ú‡§ü ‡§î‡§∞ ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?'
                    : 'You can choose from various investment options. What is your budget and goal?';
            } else if (lowerCaseMsg.includes('scam') || lowerCaseMsg.includes('fraud') || lowerCaseMsg.includes('‡§ß‡•ã‡§ñ‡§æ')) {
                botResponse = currentLanguage === 'hi'
                    ? '‡§∏‡§æ‡§µ‡§ß‡§æ‡§® ‡§∞‡§π‡•á‡§Ç! ‡§ï‡§≠‡•Ä ‡§≠‡•Ä ‡§Ö‡§™‡§®‡•Ä ‡§¨‡•à‡§Ç‡§ï‡§ø‡§Ç‡§ó ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä, OTP ‡§Ø‡§æ ‡§™‡§æ‡§∏‡§µ‡§∞‡•ç‡§° ‡§ï‡§ø‡§∏‡•Ä ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§æ‡§ù‡§æ ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§'
                    : 'Stay alert! Never share your banking information, OTP, or password with anyone.';
            } else if (lowerCaseMsg.includes('insurance') || lowerCaseMsg.includes('‡§¨‡•Ä‡§Æ‡§æ')) {
                botResponse = currentLanguage === 'hi'
                    ? '‡§π‡§Æ ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§¨‡•Ä‡§Æ‡§æ ‡§™‡•ç‡§≤‡§æ‡§® ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡§æ ‡§¨‡•Ä‡§Æ‡§æ ‡§≤‡•á‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?'
                    : 'We offer various types of insurance plans. What type of insurance would you like to get?';
            } else if (lowerCaseMsg.includes('help') || lowerCaseMsg.includes('‡§∏‡§π‡§æ‡§Ø‡§§‡§æ')) {
                botResponse = currentLanguage === 'hi'
                    ? '‡§Æ‡•à‡§Ç ‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§Æ‡§æ‡§Æ‡§≤‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡§π‡§æ‡§Ç ‡§π‡•Ç‡§Ç‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§™‡•Ç‡§õ‡•á‡§Ç‡•§'
                    : 'I\'m here to help you with financial matters. Please ask your specific question.';
            } else {
                botResponse = currentLanguage === 'hi'
                    ? '‡§Æ‡•Å‡§ù‡•á ‡§Ü‡§™‡§ï‡§æ ‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§∏‡§Æ‡§ù ‡§Æ‡•á‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§Ø‡§æ‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§á‡§∏‡•á ‡§Ö‡§≤‡§ó ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§™‡•Ç‡§õ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç?'
                    : 'I didn\'t understand your question. Could you phrase it differently?';
            }
            
            addBotMessage(botResponse);
        }, 1500);
    }
}

// Add user message to chat
function addUserMessage(message) {
    const chatBox = document.getElementById('chatBox');
    const messageDiv = document.createElement('div');
    messageDiv.className = 'message user-message';
    messageDiv.innerHTML = <div class="message-content">${message}</div>;
    chatBox.appendChild(messageDiv);
    
    // Scroll to bottom
    chatBox.scrollTop = chatBox.scrollHeight;
}

// Add bot message to chat
function addBotMessage(message) {
    const chatBox = document.getElementById('chatBox');
    const messageDiv = document.createElement('div');
    messageDiv.className = 'message bot-message';
    messageDiv.innerHTML = `
        <div class="message-avatar">ü§ñ</div>
        <div class="message-content">${message}</div>
    `;
    chatBox.appendChild(messageDiv);
    
    // Scroll to bottom
    chatBox.scrollTop = chatBox.scrollHeight;
}

// Show typing indicator
function showTypingIndicator() {
    const chatBox = document.getElementById('chatBox');
    const typingDiv = document.createElement('div');
    typingDiv.className = 'message bot-message typing-indicator-container';
    typingDiv.id = 'typingIndicator';
    typingDiv.innerHTML = `
        <div class="message-avatar">ü§ñ</div>
        <div class="typing-indicator">
            <span></span>
            <span></span>
            <span></span>
        </div>
    `;
    chatBox.appendChild(typingDiv);
    
    // Scroll to bottom
    chatBox.scrollTop = chatBox.scrollHeight;
}

// Remove typing indicator
function removeTypingIndicator() {
    const typingIndicator = document.getElementById('typingIndicator');
    if (typingIndicator) {
        typingIndicator.remove();
    }
}

// Clear chat history
function clearChat() {
    const chatBox = document.getElementById('chatBox');
    
    // Remove all messages except welcome message
    while (chatBox.children.length > 1) {
        chatBox.removeChild(chatBox.lastChild);
    }
}

// Voice recognition functionality (placeholder - requires Web Speech API)
function startListening() {
    // Check if browser supports speech recognition
    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
        const recognition = new SpeechRecognition();
        
        recognition.lang = currentLanguage === 'hi' ? 'hi-IN' : 'en-US';
        recognition.interimResults = false;
        
        // Add animation to mic button to show it's listening
        const micButton = document.querySelector('.mic-button');
        micButton.classList.add('listening');
        
        recognition.onresult = function(event) {
            const speechResult = event.results[0][0].transcript;
            document.getElementById('userInput').value = speechResult;
            sendUserInput();
            
            // Remove animation
            micButton.classList.remove('listening');
        };
        
        recognition.onerror = function() {
            // Remove animation
            micButton.classList.remove('listening');
            
            addBotMessage(currentLanguage === 'hi' 
                ? '‡§Æ‡•Å‡§ù‡•á ‡§Ü‡§™‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§ú‡§º ‡§∏‡§Æ‡§ù‡§®‡•á ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§á‡§®‡§™‡•Å‡§ü ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§'
                : 'I\'m having trouble understanding your voice. Please use text input instead.');
        };
        
        recognition.onend = function() {
            // Remove animation
            micButton.classList.remove('listening');
        };
        
        recognition.start();
    } else {
        addBotMessage(currentLanguage === 'hi' 
            ? '‡§Ü‡§™‡§ï‡§æ ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º‡§∞ ‡§µ‡•â‡§á‡§∏ ‡§∞‡§ø‡§ï‡§ó‡•ç‡§®‡§ø‡§∂‡§® ‡§ï‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§á‡§®‡§™‡•Å‡§ü ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§'
            : 'Your browser doesn\'t support voice recognition. Please use text input.');
    }
}
